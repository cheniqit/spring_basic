<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mk.taskfactory.biz.mapper.RoomSaleMapper">

	<resultMap id="tRoomSale" type="com.mk.taskfactory.model.TRoomSale">
	    <result property="id" column="id" />
	    <result property="roomTypeId" column="roomTypeId" />
	    <result property="oldRoomTypeId" column="oldRoomTypeId" />
        <result property="roomNo" column="roomNo" />
        <result property="pms" column="pms" />
        <result property="createDate" column="createDate" />
        <result property="salePrice" column="salePrice" />
        <result property="costPrice" column="costPrice" />
        <result property="startTime" column="startTime" />
        <result property="endTime" column="endTime" />
        <result property="roomId" column="roomId" />
        <result property="configId" column="configId" />
        <result property="isBack" column="isBack" />
        <result property="saleName" column="saleName" />
        <result property="saleType" column="saleType" />
        <result property="hotelId" column="hotelId" />
        <result property="settleValue" column="settleValue" />
	</resultMap>

    <sql id="Base_Column_List" >
        id, roomTypeId,oldRoomTypeId,roomNo,pms,createDate,salePrice,costPrice,
        startTime,endTime,roomId,configId,isBack,saleName,saleType,hotelId
    </sql>

    <sql id="Base_Query_List" >
        <where>
            <if test="id != null">
                 id = #{id}
            </if>
            <if test="roomTypeId != null">
                AND roomTypeId = #{roomTypeId}
            </if>
            <if test="oldRoomTypeId != null">
                AND oldRoomTypeId = #{oldRoomTypeId}
            </if>
            <if test="roomNo != null">
                AND roomNo = #{roomNo}
            </if>
            <if test="pms != null">
            AND pms = #{pms}
            </if>
            <if test="saleName != null">
                AND saleName = #{saleName}
            </if>
            <if test="saleType != null">
                AND saleType = #{saleType}
            </if>
            <if test="createDate != null">
                AND createDate = #{createDate}
            </if>
            <if test="isBack != null">
                AND isBack = #{isBack}
            </if>
            <if test="hotelId != null">
                AND hotelId = #{hotelId}
            </if>
            <if test="roomId != null">
                AND roomId = #{roomId}
            </if>
        </where>
    </sql>

    <select id="queryRoomSale" resultMap="tRoomSale" parameterType="com.mk.taskfactory.api.dtos.TRoomSaleDto">
    SELECT
    <include refid="Base_Column_List"/>
    FROM  t_room_sale
    <include refid="Base_Query_List"/>
    </select>
    <select id="getHotelSaleByHotelId" resultMap="tRoomSale" parameterType="java.lang.Integer">
        SELECT
        <include refid="Base_Column_List"/>
        FROM  t_room_sale
           WHERE  isBack ='F'
           AND hotelId = #{hotelId}
           limit 1
    </select>
    <select id="countRoomSale" resultType="Integer" parameterType="com.mk.taskfactory.api.dtos.TRoomSaleDto">
        select count(*) from count_agent_spread
        <include refid="Base_Query_List"/>
    </select>

    <insert id="saveRoomSale"  parameterType="com.mk.taskfactory.api.dtos.TRoomSaleDto" >
        INSERT INTO t_room_sale
       (roomTypeId,oldRoomTypeId,roomNo,pms,createDate,salePrice,costPrice,
        startTime,endTime,roomId,configId,isBack,saleName,saleType)
         VALUE
         (
            #{roomTypeId}, #{oldRoomTypeId},#{roomNo}, #{pms}, #{createDate},
            #{salePrice}, #{costPrice},#{startTime},#{endTime},#{roomId},#{configId},
            #{isBack},#{saleName},#{saleType}
         )
    </insert>

    <delete id="deleteRoomSale" parameterType="Integer">
         delete from t_room_sale where id = #{id}
    </delete>

    <update id="updateRoomSale" parameterType="com.mk.taskfactory.api.dtos.TRoomSaleDto" >
        update t_room_sale
        set
         roomTypeId = #{roomTypeId},
         oldRoomTypeId = #{oldRoomTypeId},
         roomNo =  #{roomNo},
         pms =  #{pms},
         createDate  = #{createDate},
         salePrice =  #{salePrice},
         costPrice =  #{costPrice},
         startTime =  #{startTime},
         endTime =  #{endTime},
         roomId =  #{roomId},
         configId =  #{configId},
         isBack =  #{isBack},
         saleName =  #{saleName},
         saleType =  #{saleType}
        where id = #{id}
    </update>

    <select id="queryYesterdayRoomSale" resultMap="tRoomSale">
        SELECT
        <include refid="Base_Column_List"/>
        FROM  t_room_sale
        WHERE createDate > date_add(CURDATE() , interval -1 DAY)
    </select>

    <select id="queryUnBackRoomSale" resultMap="tRoomSale">
        SELECT
        <include refid="Base_Column_List"/>
        FROM  t_room_sale WHERE isBack = 'F'
    </select>

    <update id="updateRoomSaleBack" parameterType="com.mk.taskfactory.api.dtos.TRoomSaleDto" >
        update t_room_sale
        set isBack =  #{isBack}
        where id = #{id}
    </update>

    <select id="queryByConfigAndBack" resultMap="tRoomSale"  parameterType="java.util.Map" >
       SELECT
        <include refid="Base_Column_List"/>
        from t_room_sale  where   configId =  #{configId}  and  isBack = #{isBack}
    </select>

    <select id="queryByConfigGroup" resultType="Integer"  parameterType="java.util.Map" >
        SELECT  roomtypeId
        from t_room_sale  where   configId =  #{configId} and  isBack =#{isBack}   group  by   roomtypeId
    </select>
</mapper>
