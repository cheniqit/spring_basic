<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mk.ots.mapper.TRoomTypeMapper">
	<resultMap id="BaseResultMap" type="com.mk.ots.hotel.model.TRoomTypeModel">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="thotelId" property="thotelid" jdbcType="BIGINT" />
		<result column="ehotelid" property="ehotelid" jdbcType="BIGINT" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="pms" property="pms" jdbcType="VARCHAR" />
		<result column="bedNum" property="bednum" jdbcType="INTEGER" />
		<result column="roomNum" property="roomnum" jdbcType="INTEGER" />
		<result column="cost" property="cost" jdbcType="DECIMAL" />
		<result column="area" property="area" jdbcType="DECIMAL" />
		<result column="bedtypename" property="bedtypename" jdbcType="VARCHAR" />
		<result column="bedlength" property="bedlength" jdbcType="VARCHAR" />
	</resultMap>
	<resultMap id="ResultMapWithBasePrice" type="com.mk.ots.hotel.model.TRoomTypeWithBasePrice"
		extends="BaseResultMap">
		<result column="roomtypeid" property="roomtypeid" jdbcType="BIGINT" />
		<result column="price" property="price" jdbcType="DECIMAL" />
		<result column="subprice" property="subprice" jdbcType="DECIMAL" />
		<result column="subper" property="subper" jdbcType="DECIMAL" />
	</resultMap>
	<sql id="Base_Column_List">
		id, thotelid, ehotelid, name, pms, bednum, roomnum, cost
	</sql>
	<sql id="BasePrice_Column_List">
		price, subprice, subper
	</sql>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from t_roomtype
		where id = #{id,jdbcType=BIGINT}
	</select>

	<select id="findList_bak" resultMap="BaseResultMap"
		parameterType="java.util.Map">
		select
		<include refid="Base_Column_List" />
		from t_roomtype where 1=1
		<if test="id != null">
			and id = #{id}
		</if>
		<if test="hotelid != null">
			and thotelid = #{hotelid}
		</if>
		<if test="bednum != null">
			and bednum = #{bednum}
		</if>
	</select>

	<select id="findTRoomTypeByHotelid" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select * from t_roomtype where ehotelid=#{eHotelId};

	</select>


	<select id="findList" resultMap="BaseResultMap" parameterType="java.util.Map">
		SELECT
			a.id,
			a.thotelid,
			a.ehotelid,
			a.NAME,
			a.pms,
			b.bedtype AS bednum,
			a.roomnum,
			a.cost,
			b.maxarea AS area,
			c.NAME AS bedtypename,
			b.bedsize AS bedlength
			FROM
			t_roomtype a
			LEFT JOIN t_roomtype_info b ON a.id = b.roomtypeid
			LEFT JOIN
			t_bedtype c ON b.bedtype = c.id
		WHERE
			1 = 1
		<if test="id != null">
			and a.id = #{id}
		</if>
		<if test="hotelid != null">
			and a.thotelid = #{hotelid}
		</if>
		<if test="bednum != null">
			and b.bedtype = #{bednum}
		</if>
	</select>
	<insert id="saveTRoomType" parameterType="com.mk.ots.hotel.model.TRoomTypeModel"
		useGeneratedKeys="true" keyProperty="id">
		insert into t_roomtype ( thotelid, ehotelid, name, pms, bednum, roomnum,
		cost )
		values
		( #{thotelid}, #{ehotelid}, #{name}, #{pms}, #{bednum}, #{roomnum},
		#{cost} )
	</insert>

	<delete id="delTRoomTypeById" parameterType="java.lang.Long">
		delete from t_roomtype where id=#{id,jdbcType=BIGINT}
	</delete>
	<select id="findPriceById" resultMap="ResultMapWithBasePrice"
		parameterType="java.lang.Long">
		select a.id, a.thotelid, a.ehotelid, a.name, a.pms, a.bednum, a.roomnum,
		a.cost
		,b.roomtypeid,b.price,b.subprice,b.subper
		from t_roomtype a
		left outer join t_baseprice b
		on a.id=b.roomtypeid
		where a.id = #{id}
	</select>

	<update id="updateTRoomType" parameterType="com.mk.ots.hotel.model.TRoomTypeModel">
		update t_roomtype set name=#{name}, cost=#{cost}, roomnum=#{roomnum} where
		id=#{id}
	</update>
	<select id="findHotelPrices" resultMap="ResultMapWithBasePrice"
		parameterType="java.lang.Long">
		select a.id, a.thotelid, a.ehotelid, a.name, a.pms, a.bednum, a.roomnum,
		a.cost
		,b.roomtypeid,b.price,b.subprice,b.subper
		from t_roomtype a
		left outer join t_baseprice b
		on a.id=b.roomtypeid
		where a.thotelid = #{hotelid}
	</select>
</mapper>