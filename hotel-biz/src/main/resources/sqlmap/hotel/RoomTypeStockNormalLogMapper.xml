<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mk.hotel.roomtypestock.mapper.RoomTypeStockNormalLogMapper" >
  <resultMap id="BaseResultMap" type="com.mk.hotel.roomtypestock.model.RoomTypeStockNormalLog" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="room_type_id" property="roomTypeId" jdbcType="BIGINT" />
    <result column="mon_total_number" property="monTotalNumber" jdbcType="BIGINT" />
    <result column="tue_total_number" property="tueTotalNumber" jdbcType="BIGINT" />
    <result column="wed_total_number" property="wedTotalNumber" jdbcType="BIGINT" />
    <result column="thu_total_number" property="thuTotalNumber" jdbcType="BIGINT" />
    <result column="fri_total_number" property="friTotalNumber" jdbcType="BIGINT" />
    <result column="sat_total_number" property="satTotalNumber" jdbcType="BIGINT" />
    <result column="sun_total_number" property="sunTotalNumber" jdbcType="BIGINT" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
    <result column="is_valid" property="isValid" jdbcType="CHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, room_type_id, mon_total_number, tue_total_number, wed_total_number, thu_total_number, 
    fri_total_number, sat_total_number, sun_total_number, create_date, create_by, update_date, 
    update_by, is_valid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mk.hotel.roomtypestock.model.RoomTypeStockNormalLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from room_type_stock_normal_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from room_type_stock_normal_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from room_type_stock_normal_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.mk.hotel.roomtypestock.model.RoomTypeStockNormalLogExample" >
    delete from room_type_stock_normal_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mk.hotel.roomtypestock.model.RoomTypeStockNormalLog" useGeneratedKeys="true" keyProperty="true"  >
    insert into room_type_stock_normal_log (id, room_type_id, mon_total_number, 
      tue_total_number, wed_total_number, thu_total_number, 
      fri_total_number, sat_total_number, sun_total_number, 
      create_date, create_by, update_date, 
      update_by, is_valid)
    values (#{id,jdbcType=BIGINT}, #{roomTypeId,jdbcType=BIGINT}, #{monTotalNumber,jdbcType=BIGINT}, 
      #{tueTotalNumber,jdbcType=BIGINT}, #{wedTotalNumber,jdbcType=BIGINT}, #{thuTotalNumber,jdbcType=BIGINT}, 
      #{friTotalNumber,jdbcType=BIGINT}, #{satTotalNumber,jdbcType=BIGINT}, #{sunTotalNumber,jdbcType=BIGINT}, 
      #{createDate,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=VARCHAR}, #{isValid,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.mk.hotel.roomtypestock.model.RoomTypeStockNormalLog" useGeneratedKeys="true" keyProperty="true" >
    insert into room_type_stock_normal_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="roomTypeId != null" >
        room_type_id,
      </if>
      <if test="monTotalNumber != null" >
        mon_total_number,
      </if>
      <if test="tueTotalNumber != null" >
        tue_total_number,
      </if>
      <if test="wedTotalNumber != null" >
        wed_total_number,
      </if>
      <if test="thuTotalNumber != null" >
        thu_total_number,
      </if>
      <if test="friTotalNumber != null" >
        fri_total_number,
      </if>
      <if test="satTotalNumber != null" >
        sat_total_number,
      </if>
      <if test="sunTotalNumber != null" >
        sun_total_number,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="isValid != null" >
        is_valid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="roomTypeId != null" >
        #{roomTypeId,jdbcType=BIGINT},
      </if>
      <if test="monTotalNumber != null" >
        #{monTotalNumber,jdbcType=BIGINT},
      </if>
      <if test="tueTotalNumber != null" >
        #{tueTotalNumber,jdbcType=BIGINT},
      </if>
      <if test="wedTotalNumber != null" >
        #{wedTotalNumber,jdbcType=BIGINT},
      </if>
      <if test="thuTotalNumber != null" >
        #{thuTotalNumber,jdbcType=BIGINT},
      </if>
      <if test="friTotalNumber != null" >
        #{friTotalNumber,jdbcType=BIGINT},
      </if>
      <if test="satTotalNumber != null" >
        #{satTotalNumber,jdbcType=BIGINT},
      </if>
      <if test="sunTotalNumber != null" >
        #{sunTotalNumber,jdbcType=BIGINT},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="isValid != null" >
        #{isValid,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mk.hotel.roomtypestock.model.RoomTypeStockNormalLogExample" resultType="java.lang.Integer" >
    select count(*) from room_type_stock_normal_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update room_type_stock_normal_log
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.roomTypeId != null" >
        room_type_id = #{record.roomTypeId,jdbcType=BIGINT},
      </if>
      <if test="record.monTotalNumber != null" >
        mon_total_number = #{record.monTotalNumber,jdbcType=BIGINT},
      </if>
      <if test="record.tueTotalNumber != null" >
        tue_total_number = #{record.tueTotalNumber,jdbcType=BIGINT},
      </if>
      <if test="record.wedTotalNumber != null" >
        wed_total_number = #{record.wedTotalNumber,jdbcType=BIGINT},
      </if>
      <if test="record.thuTotalNumber != null" >
        thu_total_number = #{record.thuTotalNumber,jdbcType=BIGINT},
      </if>
      <if test="record.friTotalNumber != null" >
        fri_total_number = #{record.friTotalNumber,jdbcType=BIGINT},
      </if>
      <if test="record.satTotalNumber != null" >
        sat_total_number = #{record.satTotalNumber,jdbcType=BIGINT},
      </if>
      <if test="record.sunTotalNumber != null" >
        sun_total_number = #{record.sunTotalNumber,jdbcType=BIGINT},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.isValid != null" >
        is_valid = #{record.isValid,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update room_type_stock_normal_log
    set id = #{record.id,jdbcType=BIGINT},
      room_type_id = #{record.roomTypeId,jdbcType=BIGINT},
      mon_total_number = #{record.monTotalNumber,jdbcType=BIGINT},
      tue_total_number = #{record.tueTotalNumber,jdbcType=BIGINT},
      wed_total_number = #{record.wedTotalNumber,jdbcType=BIGINT},
      thu_total_number = #{record.thuTotalNumber,jdbcType=BIGINT},
      fri_total_number = #{record.friTotalNumber,jdbcType=BIGINT},
      sat_total_number = #{record.satTotalNumber,jdbcType=BIGINT},
      sun_total_number = #{record.sunTotalNumber,jdbcType=BIGINT},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      is_valid = #{record.isValid,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mk.hotel.roomtypestock.model.RoomTypeStockNormalLog" >
    update room_type_stock_normal_log
    <set >
      <if test="roomTypeId != null" >
        room_type_id = #{roomTypeId,jdbcType=BIGINT},
      </if>
      <if test="monTotalNumber != null" >
        mon_total_number = #{monTotalNumber,jdbcType=BIGINT},
      </if>
      <if test="tueTotalNumber != null" >
        tue_total_number = #{tueTotalNumber,jdbcType=BIGINT},
      </if>
      <if test="wedTotalNumber != null" >
        wed_total_number = #{wedTotalNumber,jdbcType=BIGINT},
      </if>
      <if test="thuTotalNumber != null" >
        thu_total_number = #{thuTotalNumber,jdbcType=BIGINT},
      </if>
      <if test="friTotalNumber != null" >
        fri_total_number = #{friTotalNumber,jdbcType=BIGINT},
      </if>
      <if test="satTotalNumber != null" >
        sat_total_number = #{satTotalNumber,jdbcType=BIGINT},
      </if>
      <if test="sunTotalNumber != null" >
        sun_total_number = #{sunTotalNumber,jdbcType=BIGINT},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="isValid != null" >
        is_valid = #{isValid,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mk.hotel.roomtypestock.model.RoomTypeStockNormalLog" >
    update room_type_stock_normal_log
    set room_type_id = #{roomTypeId,jdbcType=BIGINT},
      mon_total_number = #{monTotalNumber,jdbcType=BIGINT},
      tue_total_number = #{tueTotalNumber,jdbcType=BIGINT},
      wed_total_number = #{wedTotalNumber,jdbcType=BIGINT},
      thu_total_number = #{thuTotalNumber,jdbcType=BIGINT},
      fri_total_number = #{friTotalNumber,jdbcType=BIGINT},
      sat_total_number = #{satTotalNumber,jdbcType=BIGINT},
      sun_total_number = #{sunTotalNumber,jdbcType=BIGINT},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      is_valid = #{isValid,jdbcType=CHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <insert id="batchInsert" parameterType="java.util.List" useGeneratedKeys="true" >
    insert into room_type_stock_normal_log (id, room_type_id, mon_total_number,
    tue_total_number, wed_total_number, thu_total_number,
    fri_total_number, sat_total_number, sun_total_number,
    create_date, create_by, update_date,
    update_by, is_valid)
    values 
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.roomTypeId,jdbcType=BIGINT}, #{item.monTotalNumber,jdbcType=BIGINT},
      #{item.tueTotalNumber,jdbcType=BIGINT}, #{item.wedTotalNumber,jdbcType=BIGINT}, #{item.thuTotalNumber,jdbcType=BIGINT},
      #{item.friTotalNumber,jdbcType=BIGINT}, #{item.satTotalNumber,jdbcType=BIGINT}, #{item.sunTotalNumber,jdbcType=BIGINT},
      #{item.createDate,jdbcType=TIMESTAMP}, #{item.createBy,jdbcType=VARCHAR}, #{item.updateDate,jdbcType=TIMESTAMP},
      #{item.updateBy,jdbcType=VARCHAR}, #{item.isValid,jdbcType=CHAR})
    </foreach>
  </insert>
</mapper>